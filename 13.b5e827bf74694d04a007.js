(function(){(this||window).webpackJsonp.registerAbsMids({"esri/layers/MapImageLayer":1004,"esri/layers/support/ExportImageParameters":1309})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{1004:function(e,r,t){var i,a;i=[t.dj.c(e.i),r,t(5),t(1),t(0),t(61),t(8),t(9),t(31),t(10),t(132),t(212),t(13),t(323),t(4),t(2),t(14),t(144),t(372),t(97),t(1428),t(333),t(327),t(325),t(331),t(198),t(1429),t(363),t(197),t(1309),t(1314),t(1198)],void 0===(a=function(e,r,t,i,a,n,s,o,l,p,y,u,c,d,h,m,b,f,g,v,S,O,x,w,L,E,I,j,D,P,M,_){return function(e){function r(r,t){var i=e.call(this,r)||this;return i.alwaysRefetch=!1,i.dpi=96,i.gdbVersion=null,i.imageFormat="png24",i.imageMaxHeight=2048,i.imageMaxWidth=2048,i.imageTransparency=!0,i.labelsVisible=!1,i.isReference=null,i.operationalLayerType="ArcGISMapServiceLayer",i.sourceJSON=null,i.sublayers=null,i.type="map-image",i.url=null,i}return i(r,e),r.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?t({url:e},r):e},r.prototype.load=function(e){var r=this,t=c.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then((function(){return r._fetchService(t)}),(function(){return r._fetchService(t)}))),h.resolve(this)},r.prototype.readImageFormat=function(e,r){var t=r.supportedImageFormatTypes;return t&&t.indexOf("PNG32")>-1?"png32":"png24"},r.prototype.writeSublayers=function(e,r,i,a){if(this.loaded&&e){var n=e.slice().reverse().flatten((function(e){var r=e.sublayers;return r&&r.toArray().reverse()})).toArray(),s=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){var o=f.nameToId(a.origin);if(3===o){var l=this.createSublayersForOrigin("service").sublayers;s=_.shouldWriteSublayerStructure(n,l,2)}else if(o>3){var p=this.createSublayersForOrigin("portal-item");s=_.shouldWriteSublayerStructure(n,p.sublayers,f.nameToId(p.origin))}}var y=[],u=t({writeSublayerStructure:s},a),c=s;n.forEach((function(e){var r=e.write({},u);y.push(r),c=c||"user"===e.originOf("visible")})),y.some((function(e){return Object.keys(e).length>1}))&&(r.layers=y),c&&(r.visibleLayers=n.filter((function(e){return e.visible})).map((function(e){return e.id})))}},r.prototype.createExportImageParameters=function(e,r,i,a){var n=a&&a.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());var s=new P.ExportImageParameters({layer:this,scale:g.getScale({extent:e,width:r})*n}),o=s.toJSON();s.layer=null,s.destroy();var l=!a||!a.rotation||this.version<10.3?{}:{rotation:-a.rotation},p=e&&e.spatialReference,y=p.wkid||JSON.stringify(p.toJSON());o.dpi*=n;var u={};if(a&&a.timeExtent){var c=a.timeExtent.toJSON(),d=c.start,h=c.end;d&&h&&d===h?u.time=""+d:null==d&&null==h||(u.time=(null==d?"null":d)+","+(null==h?"null":h))}return t({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:r+","+i},o,l,u)},r.prototype.fetchImage=function(e,r,i,a){var n={responseType:"image"};a&&a.timestamp&&(n.query={_ts:a.timestamp}),a&&a.signal&&(n.signal=a.signal);var s=this.parsedUrl.path+"/export",o=t({},this.parsedUrl.query,this.createExportImageParameters(e,r,i,a),{f:"image",_ts:this.alwaysRefetch?Date.now():null});return null==o.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(n.query?n.query=t({},o,n.query):n.query=o,l(s,n).then((function(e){return e.data})).catch((function(e){if(h.isAbortError(e))throw e;throw new p("mapimagelayer:image-fetch-error","Unable to load image: "+s,{error:e})}))):h.reject(new p("mapimagelayer:dynamiclayer-not-supported","service "+this.url+" doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.",{query:o}))},r.prototype.loadAll=function(){var e=this;return u.default(this,(function(r){r(e.allSublayers)}))},r.prototype._fetchService=function(e){return o(this,void 0,void 0,(function(){var r,i;return s(this,(function(a){switch(a.label){case 0:return this.sourceJSON?(this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),[2]):[4,l(this.parsedUrl.path,{query:t({f:"json"},this.parsedUrl.query),signal:e})];case 1:return r=a.sent(),i=r.data,r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i,this.read(i,{origin:"service",url:this.parsedUrl}),[2]}}))}))},a([m.property()],r.prototype,"alwaysRefetch",void 0),a([m.property()],r.prototype,"dpi",void 0),a([m.property()],r.prototype,"gdbVersion",void 0),a([m.property({json:{read:!1,write:!1}})],r.prototype,"popupEnabled",void 0),a([m.property()],r.prototype,"imageFormat",void 0),a([m.reader("imageFormat",["supportedImageFormatTypes"])],r.prototype,"readImageFormat",null),a([m.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],r.prototype,"imageMaxHeight",void 0),a([m.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],r.prototype,"imageMaxWidth",void 0),a([m.property()],r.prototype,"imageTransparency",void 0),a([m.property({json:{read:!1,write:!1}})],r.prototype,"labelsVisible",void 0),a([m.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:function(){return{enabled:!1}}}}})],r.prototype,"isReference",void 0),a([m.property({type:["ArcGISMapServiceLayer"]})],r.prototype,"operationalLayerType",void 0),a([m.property()],r.prototype,"sourceJSON",void 0),a([m.property({json:{write:{ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),a([m.writer("sublayers",{layers:{type:[M]},visibleLayers:{type:[b.Integer]}})],r.prototype,"writeSublayers",null),a([m.property({type:["show","hide","hide-children"]})],r.prototype,"listMode",void 0),a([m.property({json:{read:!1},readOnly:!0,value:"map-image"})],r.prototype,"type",void 0),a([m.property(D.url)],r.prototype,"url",void 0),a([m.subclass("esri.layers.MapImageLayer")],r)}(m.declared(j.TemporalLayer(E.ScaleRangeLayer(L.RefreshableLayer(I.SublayersOwner(S.ArcGISMapService(O.ArcGISService(x.OperationalLayer(w.PortalLayer(d.MultiOriginJSONMixin(y.HandleOwnerMixin(v))))))))))))}.apply(null,i))||(e.exports=a)},1309:function(e,r,t){var i,a;i=[t.dj.c(e.i),r,t(5),t(1),t(0),t(11),t(2),t(1198),t(82),t(367)],void 0===(a=function(e,r,t,i,a,n,s,o,l,p){Object.defineProperty(r,"__esModule",{value:!0});var y={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"},u=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r._scale=null,r.view=null,r}return i(r,e),Object.defineProperty(r.prototype,"dynamicLayers",{get:function(){if(!this.hasDynamicLayers)return null;var e=this.visibleSublayers.map((function(e){return e.toExportImageJSON()}));return e.length?JSON.stringify(e):null},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"hasDynamicLayers",{get:function(){return this.layer&&o.isExportDynamic(this.visibleSublayers,this.layer.serviceSublayers,this.layer)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"layer",{set:function(e){var r=this;this._get("layer")!==e&&(this._set("layer",e),this._layerHandles&&(this._layerHandles.forEach((function(e){return e.remove()})),this._layerHandles.length=0),e&&(this._layerHandles=[e.allSublayers.on("change",(function(){return r.notifyChange("visibleSublayers")})),e.on("sublayer-update",(function(e){return r.notifyChange(y[e.propertyName])}))]))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"layers",{get:function(){var e=this.visibleSublayers;return e?e.length?"show:"+e.map((function(e){return e.id})).join(","):"show:-1":null},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"layerDefs",{get:function(){var e=this.visibleSublayers.filter((function(e){return null!=e.definitionExpression}));return e.length?JSON.stringify(e.reduce((function(e,r){return e[r.id]=r.definitionExpression,e}),{})):null},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scale",{get:function(){return null!=this._scale?this._scale:this.view&&this.view.scale||0},set:function(e){this.view||(this._scale=e,this.notifyChange("scale"))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"version",{get:function(){this.layers,this.layerDefs,this.dynamicLayers,this.timeExtent;var e=this.layer;return e&&(e.dpi,e.imageFormat,e.imageTransparency,e.gdbVersion),(this._get("version")||0)+1},set:function(e){this._set("version",e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"visibleSublayers",{get:function(){var e=this,r=[];if(!this.layer)return r;var t=this.layer.sublayers,i=function(t){var a=e.scale,n=0===a,s=0===t.minScale||a<=t.minScale,o=0===t.maxScale||a>=t.maxScale;t.visible&&(n||s&&o)&&(t.sublayers?t.sublayers.forEach(i):r.unshift(t))};t&&t.forEach(i);var a=this._get("visibleSublayers");return!a||a.length!==r.length||a.some((function(e,t){return r[t]!==e}))?r:a},enumerable:!0,configurable:!0}),r.prototype.toJSON=function(){var e=this.layer,r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r=t({},r,{layers:this.layers,layerDefs:this.layerDefs}),r},a([s.property({readOnly:!0,dependsOn:["hasDynamicLayers","visibleSublayers"]})],r.prototype,"dynamicLayers",null),a([s.property({readOnly:!0,dependsOn:["visibleSublayers","layer.serviceSublayers","layer.capabilities"]})],r.prototype,"hasDynamicLayers",null),a([s.property()],r.prototype,"layer",null),a([s.property({readOnly:!0,dependsOn:["visibleSublayers"]})],r.prototype,"layers",null),a([s.property({readOnly:!0,dependsOn:["visibleSublayers"]})],r.prototype,"layerDefs",null),a([s.property({type:Number,dependsOn:["view.scale"]})],r.prototype,"scale",null),a([s.property(l.combinedViewLayerTimeExtentProperty)],r.prototype,"timeExtent",void 0),a([s.property({dependsOn:["layers","layerDefs","dynamicLayers","layer.dpi","layer.imageFormat","layer.imageTransparency","layer.gdbVersion","timeExtent"]})],r.prototype,"version",null),a([s.property({type:p})],r.prototype,"view",void 0),a([s.property({readOnly:!0,dependsOn:["layer.sublayers","scale"]})],r.prototype,"visibleSublayers",null),a([s.subclass("esri.layers.mixins.ExportImageParameters")],r)}(s.declared(n));r.ExportImageParameters=u}.apply(null,i))||(e.exports=a)}}]);